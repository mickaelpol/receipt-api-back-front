name: Deploy to Production

on:
  # D√©clenchement manuel uniquement (pour √©viter les co√ªts GitHub Actions)
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production  # Requiert approbation manuelle
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache-busting automatique pour production
        run: |
          echo "üîÑ Cache-busting automatique pour production..."
          chmod +x scripts/cache-bust-safe.sh
          ./scripts/cache-bust-safe.sh
          
          echo "üìä V√©rification des changements:"
          git diff --name-only
          if git diff --quiet; then
            echo "‚ÑπÔ∏è  Aucun changement d√©tect√© dans les assets"
          else
            echo "‚úÖ Cache-busting appliqu√© avec succ√®s"
            git add frontend/index.html
            git commit -m "chore: cache-busting automatique pour production [skip ci]" || echo "‚ÑπÔ∏è  Pas de commit n√©cessaire"
          fi

      - name: Setup Google Cloud CLI
        uses: google-github-actions/setup-gcloud@v1
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          project_id: scan-document-ai

      - name: Configure Docker for GCR
        run: gcloud auth configure-docker europe-west9-docker.pkg.dev

      - name: Trigger Cloud Build (Production)
        run: |
          gcloud builds submit \
            --config cloudbuild.yaml \
            --substitutions=_ENV=prod,_REGION=europe-west9,_SERVICE_NAME=receipt-parser \
            --region=europe-west9

      - name: Run Smoke Tests
        run: |
          SERVICE_URL=$(gcloud run services describe receipt-parser \
            --region=europe-west9 \
            --format='value(status.url)')
          
          echo "Testing production deployment: $SERVICE_URL"
          
          # Test endpoints
          curl -f "$SERVICE_URL/" || exit 1
          curl -f "$SERVICE_URL/api/config" || exit 1
          
          echo "‚úÖ Production deployment successful"

      - name: Notify Success
        if: success()
        run: |
          echo "üéâ Production deployment successful!"
          echo "Service URL: $(gcloud run services describe receipt-parser --region=europe-west9 --format='value(status.url)')"

      - name: Notify Failure
        if: failure()
        run: |
          echo "‚ùå Production deployment failed!"
          # Envoyer notification email √† polmickael3@gmail.com
