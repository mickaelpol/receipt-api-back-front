#!/bin/bash

# Test sp√©cifique pour le login Google avec CSP stricte
# V√©rifie que le modal Google fonctionne sans erreurs CSP

set -e

BASE_URL=${1:-"http://localhost:8080"}
echo "üîê Test du login Google avec CSP stricte sur $BASE_URL"

# V√©rifier que l'application se charge
echo "1Ô∏è‚É£ Test de chargement de l'application..."
if curl -s "$BASE_URL" | grep -q "doctype html"; then
    echo "   ‚úÖ Application accessible"
else
    echo "   ‚ùå Application inaccessible"
    exit 1
fi

# V√©rifier que les scripts Google sont charg√©s
echo "2Ô∏è‚É£ Test des scripts Google..."
if curl -s "$BASE_URL" | grep -q "accounts.google.com/gsi/client"; then
    echo "   ‚úÖ Script Google Identity charg√©"
else
    echo "   ‚ùå Script Google Identity manquant"
    exit 1
fi

if curl -s "$BASE_URL" | grep -q "apis.google.com/js/api.js"; then
    echo "   ‚úÖ Script Google APIs charg√©"
else
    echo "   ‚ùå Script Google APIs manquant"
    exit 1
fi

# V√©rifier la CSP pour Google
echo "3Ô∏è‚É£ Test de la CSP pour Google..."
CSP_HEADER=$(curl -s -I "$BASE_URL" | grep -i "content-security-policy" || echo "")

# V√©rifier frame-src pour Google
if echo "$CSP_HEADER" | grep -q "frame-src.*accounts.google.com"; then
    echo "   ‚úÖ frame-src autorise accounts.google.com"
else
    echo "   ‚ùå frame-src n'autorise pas accounts.google.com"
    exit 1
fi

# V√©rifier script-src pour Google
if echo "$CSP_HEADER" | grep -q "script-src.*accounts.google.com"; then
    echo "   ‚úÖ script-src autorise accounts.google.com"
else
    echo "   ‚ùå script-src n'autorise pas accounts.google.com"
    exit 1
fi

# V√©rifier connect-src pour Google
if echo "$CSP_HEADER" | grep -q "connect-src.*oauth2.googleapis.com"; then
    echo "   ‚úÖ connect-src autorise oauth2.googleapis.com"
else
    echo "   ‚ùå connect-src n'autorise pas oauth2.googleapis.com"
    exit 1
fi

# V√©rifier que les CDNs sont exclus
echo "4Ô∏è‚É£ Test d'exclusion des CDNs..."
if echo "$CSP_HEADER" | grep -q "cdn.jsdelivr.net"; then
    echo "   ‚ùå CSP autorise encore cdn.jsdelivr.net"
    exit 1
else
    echo "   ‚úÖ CSP exclut les CDNs"
fi

# Test de l'API config
echo "5Ô∏è‚É£ Test de l'API config..."
if curl -s "$BASE_URL/api/config" | grep -q '"ok":true'; then
    echo "   ‚úÖ API config fonctionne"
else
    echo "   ‚ùå API config ne r√©pond pas"
    exit 1
fi

# Test de l'API auth/me (sans token, doit retourner 401)
echo "6Ô∏è‚É£ Test de l'API auth/me..."
HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" "$BASE_URL/api/auth/me")
if [ "$HTTP_STATUS" -eq 401 ]; then
    echo "   ‚úÖ API auth/me retourne 401 (attendu sans token)"
else
    echo "   ‚ùå API auth/me retourne $HTTP_STATUS (attendu 401)"
    exit 1
fi

echo ""
echo "üéâ Tous les tests Google login CSP sont pass√©s !"
echo "   - Application accessible: ‚úÖ"
echo "   - Scripts Google charg√©s: ‚úÖ"
echo "   - CSP autorise Google: ‚úÖ"
echo "   - CDNs exclus: ‚úÖ"
echo "   - APIs fonctionnelles: ‚úÖ"
